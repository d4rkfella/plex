name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      VENDOR: d4rkfella
      VERSION: 1.42.1.10060-4e8b05daf
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract sanitized version
        run: |
          VERSION_SHORT="${VERSION%%-*}"
          echo "VERSION_SHORT=$VERSION_SHORT" >> $GITHUB_ENV
      
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          build-args: |
            VENDOR=${{ env.VENDOR }}
            VERSION=${{ env.VERSION }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION_SHORT }}

      - name: Cosign Sign Image
        uses: sigstore/cosign-installer@v2
        with:
          version: latest

      - name: Sign Image with Cosign
        env:
            COSIGN_EXPERIMENTAL: "true"
        run: cosign sign ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
      
      - name: Attest
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
